Elm.Repl = Elm.Repl || {};
Elm.Repl.make = function (_elm) {
   "use strict";
   _elm.Repl = _elm.Repl || {};
   if (_elm.Repl.values)
   return _elm.Repl.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Repl",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm);
   var tsol = {ctor: "_Tuple0"};
   var people = _L.fromArray([{_: {}
                              ,address: {_: {}
                                        ,street: "123 Fake st"
                                        ,zip: "01810"}
                              ,age: 32
                              ,name: "Mark"}
                             ,{_: {}
                              ,address: {_: {}
                                        ,street: "123 Fake st"
                                        ,zip: "01810"}
                              ,age: 12
                              ,name: "Kid"}
                             ,{_: {}
                              ,address: {_: {}
                                        ,street: "123 Fake st"
                                        ,zip: "01810"}
                              ,age: 16
                              ,name: "Teen"}]);
   var olderthan16 = function (person) {
      return function () {
         switch (person.ctor)
         {case "::":
            return _U.cmp(person._0.age,
              16) > 0 ? A2($List._op["::"],
              person._0,
              olderthan16(person._1)) : olderthan16(person._1);
            case "[]":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 5 and 9");
      }();
   };
   var deltron3030 = olderthan16(people);
   _elm.Repl.values = {_op: _op
                      ,deltron3030: deltron3030
                      ,olderthan16: olderthan16
                      ,people: people
                      ,tsol: tsol};
   return _elm.Repl.values;
};